'.source.css, .source.scss, .source.less':
  'Set default states (active, focus, hover)':
    'prefix': 'states'
    'body': '&$1:active,\n&$1:focus,\n&$1:hover {\n\t${2:// Code}\n}'
  'Set all position options':
    'prefix': 'trbl'
    'body': 'top: ${1:0};\nright: ${1:0};\nbottom: ${1:0};\nleft: ${1:0};'
  'Set all background settings':
    'prefix': 'bg-full'
    'body': 'background: ${1:/* img/gradient */} ${2:transparent} center/cover no-repeat;'
  'Gradient':
    'prefix': 'gradient'
    'body': '${1:linear}-gradient(${2:0deg}, ${3:#fff 0%}, ${4:rgba(0, 0, 0, 0) 50%});'
  'Space HTML as CSS':
    'prefix': 'space-css'
    'body': '.225em'

'.source.scss':
  '@each':
    'prefix': 'each'
    'body': '@each \$${1:key}, \$${2:value} in \$${3:map} {\n\t\n}'
  '@for':
    'prefix': 'for'
    'body': '@for \$i from 1 through \$${1:3} {\n\t\n}'
  '@error':
    'prefix': 'error'
    'body': '@error \'$1\';'
  'map-get':
    'prefix': 'map'
    'body': 'map-get(\$${1:map}, ${2:value});'
  'map-deep-get':
    'prefix': 'map-deep'
    'body': 'map-get(map-get(\$${1:map}, ${2:valuelv1}), ${3:valuelv2});'
  'list-get':
    'prefix': 'list'
    'body': 'nth(\$${1:map}, ${2:1});'
  'Set bg and txt color':
    'prefix': 'bg-color'
    'body': 'background-color: ${1:color};\ncolor: contrast(${1:color});'

'.source.less':
  '@each':
    'prefix': 'each'
    'body': '.${1:name}(@list) {\n\t.each-${1:name}(length(@list)); // x (times)\n\t.each-${1:name}(@x, @i: 1) when (@i =< @x) {\n\t// value: extract(@list, @i);\n\t.each-${1:name}(@x, (@i + 1));\n\t}\n}\n.${1:name}();'
  '@for':
    'prefix': 'for'
    'body': '.for-${1:name}(${2:10}); // x (times)\n.for-${1:name}(@x, @i: 1) when (@i =< @x) {\n\t// Code\n\t.for-${1:name}(@x, (@i + 1));\n}'
  'loop':
    'prefix': 'loop'
    'body': '.loop-${1:name}(@counter) when (@counter > 0) {\n\t.loop-${1:name}((@counter - 1));\n\t// Code\n}\n.loop-${1:name}(${2:3});'
  'list-get':
    'prefix': 'list'
    'body': 'extract(\@${1:map}, ${2:1});'
  'Mixin/CSS Guard':
    'prefix': 'if'
    'body': '${2:&} when (${1:conditions}) {\n\t\n}'
  'Set bg and txt color':
    'prefix': 'bg-color'
    'body': 'background-color: ${1:color};\ncolor: contrast(${1:color}, fade(black, 87%), white);'
